apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: Build and deploy demo-app
on:
  push:
    branches:
      - "**"
env:
  APP_NAME: demo-app
  BUILD: "false"
  DEPLOY: "true"
jobs:
  build:
    if: "true"
    outputs:
      image: ${{ steps.get-image.outputs.demo-app-image }}
    steps:
      - name: Checkout code
        uses: cloudbees-io/checkout@v1
      - name: Handle safe directory errors
        uses: docker://alpine/git:latest
        run: |
          git config --global --add safe.directory '*'
      - name: Install dependencies
        uses: docker://golang:1.20
        run: go mod download
      - name: Run tests
        uses: docker://golang:1.20
        run: go test -v ./...
      - name: Run build
        uses: docker://golang:1.20
        run: |
          go build -v -buildvcs=false
          ls
          docker image ls
      - id: get-image
        uses: docker://golang:1.20
        run: echo "put image here" >> "$CLOUDBEES_OUTPUT/demo-app-image"
      
  deploy:
    if: "true"
    environment: qa
    steps:
      - uses: docker://alpine:latest
        name: Get image file
        run: |
          echo ${{needs.build.outputs.demo-app-image}} > demo-app-image
          file demo-app-image
      - uses: cloudbees-io/checkout@v1
        name: Checkout code
      - uses: docker://alpine:latest
        name: Add kubectl config.json file
        run: |
          cat >> gconfig.json << EOF
          ${{ secrets.mlcbMultilinePass }}
          EOF
      - name: Google Cloud authentication
        uses: docker://kiwigrid/gcloud-kubectl-helm:latest
        run: |
          gcloud auth login --cred-file=gconfig.json 
          gcloud container clusters get-credentials mlcb-platform-cluster-ap002 --region us-east1 --project mlcbplatformproject
      - uses: docker://kiwigrid/gcloud-kubectl-helm:latest
        name: test connection
        run: |
          kubectl get namespaces
      - uses: docker://kiwigrid/gcloud-kubectl-helm:latest
        name: Deploy helm chart
        kind: deploy
        run: |
          helm upgrade demo-app ./chart -f values.yaml --create-namespace
    needs:
      - build
